// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using matcrm.data.Context;

#nullable disable

namespace matcrm.data.Migrations
{
    [DbContext(typeof(OneClappContext))]
    [Migration("20220719105156_Remove_Contact_Table_20220719")]
    partial class Remove_Contact_Table_20220719
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("matcrm.data.Models.Tables.ActivityAvailability", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ActivityAvailability");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ActivityType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivityType");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.BorderStyle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("BorderStyle");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CalendarList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("CalendarList");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CalendarRepeatType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedBy")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("CalendarRepeatType");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CalendarSubTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CalendarTaskId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Detail")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<int?>("RepeatCount")
                        .HasColumnType("integer");

                    b.Property<long?>("RepeatTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StartTime")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CalendarTaskId");

                    b.HasIndex("RepeatTypeId");

                    b.ToTable("CalendarSubTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CalendarSyncActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("ActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CalendarEventId")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("IntProviderAppSecretId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IntProviderAppSecretId");

                    b.HasIndex("TenantId");

                    b.ToTable("CalendarSyncActivity");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CalendarTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CalendarListId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Detail")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<int?>("RepeatCount")
                        .HasColumnType("integer");

                    b.Property<long?>("RepeatTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StartTime")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CalendarListId");

                    b.HasIndex("RepeatTypeId");

                    b.ToTable("CalendarTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CheckList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModuleId");

                    b.HasIndex("TenantId");

                    b.ToTable("CheckList");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CheckListAssignUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("AssignUserId")
                        .HasColumnType("integer");

                    b.Property<long?>("CheckListId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AssignUserId");

                    b.HasIndex("CheckListId");

                    b.HasIndex("TenantId");

                    b.ToTable("CheckListAssignUser");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CheckListUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CheckListId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CheckListId");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.ToTable("CheckListUser");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ChildTaskActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("ChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ChildTaskActivity", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ChildTaskAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("ChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ChildTaskAttachment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ChildTaskComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("ChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ChildTaskComment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ChildTaskTimeRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("ChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ChildTaskTimeRecord", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("CustomControl");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomControlOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomFieldId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Option")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("CustomControlOption");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomDomainEmailConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("IMAPHost")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("IMAPPort")
                        .HasColumnType("integer");

                    b.Property<long?>("IntProviderAppSecretId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(10000)");

                    b.Property<string>("SMTPHost")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("SMTPPort")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("IntProviderAppSecretId");

                    b.ToTable("CustomDomainEmailConfig");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalutationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WeClappCustomerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SalutationId");

                    b.HasIndex("TenantId");

                    b.ToTable("Customer", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerActivityAvailabilityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerActivityTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EndTime")
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ScheduleEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ScheduleStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StartTime")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerActivityAvailabilityId");

                    b.HasIndex("CustomerActivityTypeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomerActivity", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerActivityMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CustomerActivityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerActivityId");

                    b.ToTable("CustomerActivityMember", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomerAttachment", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerEmail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<long?>("EmailTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmailTypeId");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomerEmail", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerLabel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("LabelId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LabelId");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomerLabel", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomerNote", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerNotesComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerNoteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerNoteId");

                    b.ToTable("CustomerNotesComment", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerPhone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("varchar(50)");

                    b.Property<long?>("PhoneNoTypeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PhoneNoTypeId");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomerPhone", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomerType");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("ControlId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ControlId");

                    b.ToTable("CustomField");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomFieldValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("FieldId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RecordId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedOn")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CustomFieldValue");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MasterTableId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("CustomModule");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomTable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("CustomTable");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomTableColumn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("ControlId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomFieldId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MasterTableId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ControlId");

                    b.HasIndex("CustomFieldId");

                    b.HasIndex("MasterTableId");

                    b.HasIndex("TenantId");

                    b.ToTable("CustomTableColumn");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomTenantField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("FieldId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CustomTenantField");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Discussion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("AssignUserId")
                        .HasColumnType("integer");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<long?>("TeamInboxId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<string>("Topic")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssignUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TeamInboxId");

                    b.HasIndex("TenantId");

                    b.ToTable("Discussion", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.DiscussionComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DiscussionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("boolean");

                    b.Property<int?>("PinnedBy")
                        .HasColumnType("integer");

                    b.Property<long?>("ReplyCommentId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("PinnedBy");

                    b.HasIndex("ReplyCommentId");

                    b.HasIndex("TeamMemberId");

                    b.ToTable("DiscussionComment", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.DiscussionCommentAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("DiscussionCommentId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionCommentId");

                    b.ToTable("DiscussionCommentAttachment", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.DiscussionParticipant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DiscussionId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("TeamMemberId");

                    b.ToTable("DiscussionParticipant", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.DiscussionRead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DiscussionId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ReadBy")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("ReadBy");

                    b.ToTable("DiscussionRead", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmailConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<int?>("EmailProviderId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("EmailConfig");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmailLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FromEmail")
                        .HasColumnType("varchar(254)");

                    b.Property<string>("FromLabel")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<string>("TemplateCode")
                        .HasColumnType("varchar(5)");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<string>("ToEmail")
                        .HasColumnType("varchar(254)");

                    b.Property<int?>("Tried")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("EmailLog");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmailPhoneNoType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("EmailPhoneNoType");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmailProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Host")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("Port")
                        .HasColumnType("integer");

                    b.Property<string>("ProviderName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmailProvider");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmailTemplate", b =>
                {
                    b.Property<long>("EmailTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EmailTemplateId"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TemplateCode")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("TemplateHtml")
                        .HasColumnType("text");

                    b.Property<string>("TemplateName")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("EmailTemplateId");

                    b.ToTable("EmailTemplate");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("EmployeeSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WeClappTimeRecordId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSubTaskId");

                    b.HasIndex("StatusId");

                    b.ToTable("EmployeeChildTask", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeChildTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeChildTaskActivity", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeChildTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeChildTaskAttachment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeChildTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeChildTaskComment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskTimeRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeChildTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeChildTaskTimeRecord", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeChildTaskId");

                    b.ToTable("EmployeeChildTaskUser", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan?>("EstimatedTime")
                        .HasColumnType("interval");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1500)");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TenantId");

                    b.ToTable("EmployeeProject", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeProjectActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeProjectActivity", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeProjectStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("EmployeeProjectStatus", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("EmployeeTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WeClappTimeRecordId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTaskId");

                    b.HasIndex("StatusId");

                    b.ToTable("EmployeeSubTask", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSubTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeSubTaskActivity", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSubTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeSubTaskAttachment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSubTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeSubTaskComment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskTimeRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("SubTaskId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeSubTaskTimeRecord", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeSubTaskId");

                    b.ToTable("EmployeeSubTaskUser", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SectionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SectionId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TenantId");

                    b.ToTable("EmployeeTask", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeTaskId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeTaskActivity", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeTaskAttachment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeTaskComment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinalize")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("EmployeeTaskStatus", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskTimeRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeTaskTimeRecord", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("EmployeeTaskId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTaskId");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeTaskUser", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ERPSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ERPSystem");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ERPSystemColumnMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomFieldId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomModuleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DestinationColumnName")
                        .HasColumnType("text");

                    b.Property<long?>("ERPSystemId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("SourceColumnName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WeClappUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldId");

                    b.HasIndex("CustomModuleId");

                    b.HasIndex("ERPSystemId");

                    b.HasIndex("WeClappUserId");

                    b.ToTable("ERPSystemColumnMap");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ErrorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InnerException")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<string>("TargetSite")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ExternalUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<DateTime?>("ExpiredOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Id_Token")
                        .HasColumnType("text");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Token_Type")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IntProviderId");

                    b.ToTable("ExternalUser");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ImportContactAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("TenantId");

                    b.ToTable("ImportContactAttachment");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.IntProvider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("IntProvider");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.IntProviderApp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("IntProviderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("IntProviderId");

                    b.ToTable("IntProviderApp");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.IntProviderAppSecret", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Access_Token")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<long?>("Expires_In")
                        .HasColumnType("bigint");

                    b.Property<string>("Id_Token")
                        .HasColumnType("text");

                    b.Property<long?>("IntProviderAppId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSelect")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastAccessedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Refresh_Token")
                        .HasColumnType("text");

                    b.Property<string>("Scope")
                        .HasColumnType("text");

                    b.Property<string>("Token_Type")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("IntProviderAppId");

                    b.ToTable("IntProviderAppSecret");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Label", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("LabelCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LabelCategoryId");

                    b.HasIndex("TenantId");

                    b.ToTable("Label", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LabelCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("LabelCategory", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LanguageId"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LanguageName")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("LanguageId");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Lead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DealValue")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TenantId");

                    b.ToTable("Lead", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LeadActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EndTime")
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<long?>("LeadActivityAvailabilityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LeadActivityTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LeadId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ScheduleEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ScheduleStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StartTime")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LeadActivityAvailabilityId");

                    b.HasIndex("LeadActivityTypeId");

                    b.HasIndex("LeadId");

                    b.HasIndex("TenantId");

                    b.ToTable("LeadActivity", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LeadActivityMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<long?>("LeadActivityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LeadActivityId");

                    b.ToTable("LeadActivityMember", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LeadLabel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("LabelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LeadId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.HasIndex("LeadId");

                    b.HasIndex("TenantId");

                    b.ToTable("LeadLabel", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LeadNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("LeadId")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LeadId");

                    b.HasIndex("TenantId");

                    b.ToTable("LeadNote", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailAssignCustomer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("IntProviderAppSecretId")
                        .HasColumnType("bigint");

                    b.Property<string>("ThreadId")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("IntProviderAppSecretId");

                    b.ToTable("MailAssignCustomer", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailAssignUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("IntProviderAppSecretId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("integer");

                    b.Property<string>("ThreadId")
                        .HasColumnType("text");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("IntProviderAppSecretId");

                    b.HasIndex("TeamMemberId");

                    b.ToTable("MailAssignUser", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailBoxTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("MailBoxTeam", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("boolean");

                    b.Property<long?>("MailReplyCommentId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PinnedBy")
                        .HasColumnType("integer");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("integer");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<string>("ThreadId")
                        .HasColumnType("text");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("MailReplyCommentId");

                    b.HasIndex("PinnedBy");

                    b.HasIndex("TeamMemberId");

                    b.HasIndex("TenantId");

                    b.ToTable("MailBoxComment", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailCommentAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("MailCommentId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("MailCommentId");

                    b.ToTable("MailCommentAttachment", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailParticipant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("IntProviderAppSecretId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("TeamMemberId")
                        .HasColumnType("integer");

                    b.Property<string>("ThreadId")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("IntProviderAppSecretId");

                    b.HasIndex("TeamMemberId");

                    b.ToTable("MailParticipant", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailRead", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ReadBy")
                        .HasColumnType("integer");

                    b.Property<string>("ThreadId")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReadBy");

                    b.ToTable("MailRead", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ModuleField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("FieldId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHide")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.ToTable("ModuleField");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ModuleRecordCustomField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModuleFieldId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RecordId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ModuleFieldId");

                    b.ToTable("ModuleRecordCustomField");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MollieCustomer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CustomerId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MollieCustomer");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MollieSubscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PaymentId")
                        .HasColumnType("text");

                    b.Property<string>("SubscriptionId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MollieSubscription");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappChildTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OneClappSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WeClappTimeRecordId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OneClappChildTask", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappChildTaskUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OneClappChildTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OneClappChildTaskUser", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ButtonCssClass")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmbededCode")
                        .HasColumnType("text");

                    b.Property<string>("EmbededUrl")
                        .HasColumnType("text");

                    b.Property<long?>("FormActionId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("FormGuid")
                        .HasColumnType("uuid");

                    b.Property<long?>("FormHeaderId")
                        .HasColumnType("bigint");

                    b.Property<string>("FormKey")
                        .HasColumnType("text");

                    b.Property<long?>("FormLayoutId")
                        .HasColumnType("bigint");

                    b.Property<object>("FormStyle")
                        .HasColumnType("jsonb");

                    b.Property<long?>("FormTypeId")
                        .HasColumnType("bigint");

                    b.Property<object>("HeaderStyle")
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUseCssClass")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUsePlaceHolder")
                        .HasColumnType("boolean");

                    b.Property<object>("LayoutStyle")
                        .HasColumnType("jsonb");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("RedirectUrl")
                        .HasColumnType("text");

                    b.Property<string>("SlidingFormPosition")
                        .HasColumnType("text");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("FormActionId");

                    b.HasIndex("FormHeaderId");

                    b.HasIndex("FormLayoutId");

                    b.HasIndex("FormTypeId");

                    b.HasIndex("TenantId");

                    b.ToTable("OneClappForm", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("OneClappFormAction", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CssClassName")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("CustomFieldId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomModuleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomTableColumnId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<object>("FormFieldStyle")
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<string>("LabelName")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("OneClappFormId")
                        .HasColumnType("bigint");

                    b.Property<string>("PlaceHolder")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<object>("TypographyStyle")
                        .HasColumnType("jsonb");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldId");

                    b.HasIndex("CustomModuleId");

                    b.HasIndex("CustomTableColumnId");

                    b.HasIndex("OneClappFormId");

                    b.ToTable("OneClappFormField", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormFieldValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomFieldId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomTableColumnId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OneClappFormFieldId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OneClappFormId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OneClappRequestFormId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OptionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldId");

                    b.HasIndex("CustomTableColumnId");

                    b.HasIndex("OneClappFormFieldId");

                    b.HasIndex("OneClappFormId");

                    b.HasIndex("OneClappRequestFormId");

                    b.HasIndex("OptionId");

                    b.ToTable("OneClappFormFieldValue", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CustomHeaderImage")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HeaderImage")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ImageLink")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("ImageSize")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("OneClappFormHeader", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormLayout", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LayoutBackgroundId")
                        .HasColumnType("bigint");

                    b.Property<bool>("TextDirectionRTL")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LayoutBackgroundId");

                    b.ToTable("OneClappFormLayout", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormLayoutBackground", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("BackgroundImage")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CustomBackgroundImage")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("OneClappFormLayoutBackground", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OneClappFormStatus", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("OneClappFormType", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappLatestTheme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Accent")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Primary")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Warn")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("OneClappLatestTheme", "AppTheme");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappLatestThemeConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OneClappLatestThemeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OneClappLatestThemeLayoutId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OneClappLatestThemeSchemeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OneClappLatestThemeId");

                    b.HasIndex("OneClappLatestThemeLayoutId");

                    b.HasIndex("OneClappLatestThemeSchemeId");

                    b.ToTable("OneClappLatestThemeConfig", "AppTheme");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappLatestThemeLayout", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TemplateHtml")
                        .HasColumnType("text");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("OneClappLatestThemeLayout", "AppTheme");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappLatestThemeScheme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TemplateHtml")
                        .HasColumnType("text");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("OneClappLatestThemeScheme", "AppTheme");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("OneClappModule");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappRequestForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsVerify")
                        .HasColumnType("boolean");

                    b.Property<long?>("OneClappFormId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OneClappFormStatusId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OneClappFormStatusId");

                    b.ToTable("OneClappRequestForm", "AppForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappSubTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OneClappTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WeClappTimeRecordId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OneClappSubTask", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappSubTaskUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OneClappSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OneClappSubTaskUser", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<long?>("SectionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WeClappTimeRecordId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OneClappTask", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappTaskUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OneClappTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OneClappTaskUser", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WeClappOrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Organization", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EndTime")
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<long?>("OrganizationActivityAvailabilityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganizationActivityTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ScheduleEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ScheduleStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StartTime")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationActivityAvailabilityId");

                    b.HasIndex("OrganizationActivityTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TenantId");

                    b.ToTable("OrganizationActivity", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationActivityMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<long?>("OrganizationActivityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationActivityId");

                    b.ToTable("OrganizationActivityMember", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TenantId");

                    b.ToTable("OrganizationAttachment", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationLabel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("LabelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TenantId");

                    b.ToTable("OrganizationLabel", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TenantId");

                    b.ToTable("OrganizationNote", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationNotesComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("OrganizationNoteId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("OrganizationNoteId");

                    b.ToTable("OrganizationNotesComment", "AppCRM");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.PdfTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("TemplateHtml")
                        .HasColumnType("text");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("PdfTemplate");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("RoleName")
                        .HasColumnType("varchar(150)");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Salutation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Salutation");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Section", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1500)");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Section", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SectionActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("SectionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SectionActivity", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SubscriptionPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("MonthlyPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long?>("TrialPeriod")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("YearlyPrice")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlan");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SubscriptionPlanDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FeatureName")
                        .HasColumnType("text");

                    b.Property<long?>("SubScriptionPlanId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("SubScriptionPlanId");

                    b.ToTable("SubscriptionPlanDetail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SubscriptionType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionType");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SubTaskActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("SubTaskId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SubTaskActivity", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SubTaskAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("SubTaskId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SubTaskAttachment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SubTaskComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("SubTaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SubTaskComment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SubTaskTimeRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("SubTaskId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SubTaskTimeRecord", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TableColumnUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHide")
                        .HasColumnType("boolean");

                    b.Property<long?>("MasterTableId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<long?>("TableColumnId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MasterTableId");

                    b.HasIndex("TableColumnId");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.ToTable("TableColumnUser");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TaskActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("SectionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TaskActivity", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TaskAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TaskAttachment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TaskComment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TaskComment", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TaskStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFinalize")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TaskStatus", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TaskTimeRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TaskTimeRecord", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TaskWeclappUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ApiKey")
                        .HasColumnType("varchar(1500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<string>("TenantName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskWeclappUser", "AppTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TeamInbox", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("IntProviderAppSecretId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean");

                    b.Property<long?>("MailBoxTeamId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("IntProviderAppSecretId");

                    b.HasIndex("MailBoxTeamId");

                    b.ToTable("TeamInbox", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TeamInboxAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("TeamInboxId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TeamMateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamInboxId");

                    b.HasIndex("TeamMateId");

                    b.ToTable("TeamInboxAccess", "AppMail");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Tenant", b =>
                {
                    b.Property<int>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TenantId"));

                    b.Property<int?>("BlockedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BlockedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TenantName")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("TenantId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TenantActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TenantActivity");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TenantConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BackgroundImage")
                        .HasColumnType("varchar(1500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Font")
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUploadBgImg")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUploadLogoImg")
                        .HasColumnType("boolean");

                    b.Property<string>("LogoImage")
                        .HasColumnType("varchar(1500)");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TenantConfig");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TenantModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("ModuleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("TenantModule");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AssignedUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssignedUserUsername")
                        .HasColumnType("text");

                    b.Property<bool>("Billable")
                        .HasColumnType("boolean");

                    b.Property<long?>("ContactId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("text");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("DisableEmailTemplates")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<DateTime?>("FinishedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(254)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(254)");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("TicketCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketChannelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketPriorityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketStatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TicketCategoryId");

                    b.HasIndex("TicketChannelId");

                    b.HasIndex("TicketPriorityId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TicketCategory");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketChannel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TicketChannel");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketPriority", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Priority")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TicketPriority");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TicketStatus");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketTag");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(500)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("TicketType");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("BlockedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("BlockedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DialCode")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoggedIn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<long?>("OneClappLatestThemeConfigId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("text");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("TempGuid")
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("VerifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WeClappToken")
                        .HasColumnType("text");

                    b.Property<int?>("WeClappUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OneClappLatestThemeConfigId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.UserERPSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AuthKey")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("ERPId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(254)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Tenant")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("UserERPSystem");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.UserSubscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("boolean");

                    b.Property<long?>("SubScriptionPlanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("SubscribedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("SubscriptionTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubScriptionPlanId");

                    b.HasIndex("SubscriptionTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscription");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.VerificationCode", b =>
                {
                    b.Property<long>("VerificationCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("VerificationCodeId"));

                    b.Property<string>("Code")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpiredOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("VerificationFor")
                        .HasColumnType("varchar(50)");

                    b.HasKey("VerificationCodeId");

                    b.ToTable("VerificationCode");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.WeClappUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ApiKey")
                        .HasColumnType("varchar(1500)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TenantName")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WeClappUser");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CalendarSubTask", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CalendarTask", "CalendarTask")
                        .WithMany()
                        .HasForeignKey("CalendarTaskId");

                    b.HasOne("matcrm.data.Models.Tables.CalendarRepeatType", "CalendarRepeatType")
                        .WithMany()
                        .HasForeignKey("RepeatTypeId");

                    b.Navigation("CalendarRepeatType");

                    b.Navigation("CalendarTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CalendarSyncActivity", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("matcrm.data.Models.Tables.IntProviderAppSecret", "IntProviderAppSecret")
                        .WithMany()
                        .HasForeignKey("IntProviderAppSecretId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("IntProviderAppSecret");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CalendarTask", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CalendarList", "CalendarList")
                        .WithMany()
                        .HasForeignKey("CalendarListId");

                    b.HasOne("matcrm.data.Models.Tables.CalendarRepeatType", "CalendarRepeatType")
                        .WithMany()
                        .HasForeignKey("RepeatTypeId");

                    b.Navigation("CalendarList");

                    b.Navigation("CalendarRepeatType");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CheckList", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("matcrm.data.Models.Tables.OneClappModule", "OneClappModule")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("OneClappModule");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CheckListAssignUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("AssignUserId");

                    b.HasOne("matcrm.data.Models.Tables.CheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("CheckList");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CheckListUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CheckList", "CheckList")
                        .WithMany()
                        .HasForeignKey("CheckListId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CheckList");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomDomainEmailConfig", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.IntProviderAppSecret", "IntProviderAppSecret")
                        .WithMany()
                        .HasForeignKey("IntProviderAppSecretId");

                    b.Navigation("IntProviderAppSecret");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Customer", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Salutation", "Salutation")
                        .WithMany()
                        .HasForeignKey("SalutationId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Salutation");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerActivity", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.ActivityAvailability", "ActivityAvailability")
                        .WithMany()
                        .HasForeignKey("CustomerActivityAvailabilityId");

                    b.HasOne("matcrm.data.Models.Tables.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("CustomerActivityTypeId");

                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("ActivityAvailability");

                    b.Navigation("ActivityType");

                    b.Navigation("Customer");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerActivityMember", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomerActivity", "CustomerActivity")
                        .WithMany()
                        .HasForeignKey("CustomerActivityId");

                    b.Navigation("CustomerActivity");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerAttachment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Customer");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerEmail", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.EmailPhoneNoType", "EmailPhoneNoType")
                        .WithMany()
                        .HasForeignKey("EmailTypeId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Customer");

                    b.Navigation("EmailPhoneNoType");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerLabel", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.Label", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Customer");

                    b.Navigation("Label");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerNote", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Customer");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerNotesComment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("matcrm.data.Models.Tables.CustomerNote", "CustomerNote")
                        .WithMany()
                        .HasForeignKey("CustomerNoteId");

                    b.Navigation("CustomerNote");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerPhone", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.EmailPhoneNoType", "EmailPhoneNoType")
                        .WithMany()
                        .HasForeignKey("PhoneNoTypeId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Customer");

                    b.Navigation("EmailPhoneNoType");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomerType", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomField", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomControl", "CustomControl")
                        .WithMany()
                        .HasForeignKey("ControlId");

                    b.Navigation("CustomControl");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.CustomTableColumn", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomControl", "CustomControl")
                        .WithMany()
                        .HasForeignKey("ControlId");

                    b.HasOne("matcrm.data.Models.Tables.CustomField", "CustomField")
                        .WithMany()
                        .HasForeignKey("CustomFieldId");

                    b.HasOne("matcrm.data.Models.Tables.CustomTable", "CustomTable")
                        .WithMany()
                        .HasForeignKey("MasterTableId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("CustomControl");

                    b.Navigation("CustomField");

                    b.Navigation("CustomTable");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Discussion", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "AssignUser")
                        .WithMany()
                        .HasForeignKey("AssignUserId");

                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.TeamInbox", "TeamInbox")
                        .WithMany()
                        .HasForeignKey("TeamInboxId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("AssignUser");

                    b.Navigation("Customer");

                    b.Navigation("TeamInbox");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.DiscussionComment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Discussion", "Discussion")
                        .WithMany()
                        .HasForeignKey("DiscussionId");

                    b.HasOne("matcrm.data.Models.Tables.User", "PinnedUser")
                        .WithMany()
                        .HasForeignKey("PinnedBy");

                    b.HasOne("matcrm.data.Models.Tables.DiscussionComment", "ReplyDiscussionComment")
                        .WithMany()
                        .HasForeignKey("ReplyCommentId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("TeamMemberId");

                    b.Navigation("Discussion");

                    b.Navigation("PinnedUser");

                    b.Navigation("ReplyDiscussionComment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.DiscussionCommentAttachment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.DiscussionComment", "DiscussionComment")
                        .WithMany()
                        .HasForeignKey("DiscussionCommentId");

                    b.Navigation("DiscussionComment");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.DiscussionParticipant", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Discussion", "Discussion")
                        .WithMany()
                        .HasForeignKey("DiscussionId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("TeamMemberId");

                    b.Navigation("Discussion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.DiscussionRead", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Discussion", "Discussion")
                        .WithMany()
                        .HasForeignKey("DiscussionId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("ReadBy");

                    b.Navigation("Discussion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTask", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeSubTask", "EmployeeSubTask")
                        .WithMany()
                        .HasForeignKey("EmployeeSubTaskId");

                    b.HasOne("matcrm.data.Models.Tables.EmployeeTaskStatus", "EmployeeTaskStatus")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("EmployeeSubTask");

                    b.Navigation("EmployeeTaskStatus");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskActivity", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeChildTask", "EmployeeChildTask")
                        .WithMany()
                        .HasForeignKey("EmployeeChildTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeChildTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskAttachment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeChildTask", "EmployeeChildTask")
                        .WithMany()
                        .HasForeignKey("EmployeeChildTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeChildTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskComment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeChildTask", "EmployeeChildTask")
                        .WithMany()
                        .HasForeignKey("EmployeeChildTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeChildTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskTimeRecord", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeChildTask", "EmployeeChildTask")
                        .WithMany()
                        .HasForeignKey("EmployeeChildTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeChildTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeChildTaskUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeChildTask", "EmployeeChildTask")
                        .WithMany()
                        .HasForeignKey("EmployeeChildTaskId");

                    b.Navigation("EmployeeChildTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeProject", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeProjectStatus", "EmployeeProjectStatus")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("EmployeeProjectStatus");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeProjectActivity", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTask", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeTask", "EmployeeTask")
                        .WithMany()
                        .HasForeignKey("EmployeeTaskId");

                    b.HasOne("matcrm.data.Models.Tables.EmployeeTaskStatus", "EmployeeTaskStatus")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("EmployeeTask");

                    b.Navigation("EmployeeTaskStatus");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskActivity", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeSubTask", "EmployeeSubTask")
                        .WithMany()
                        .HasForeignKey("EmployeeSubTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeSubTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskAttachment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeSubTask", "EmployeeSubTask")
                        .WithMany()
                        .HasForeignKey("EmployeeSubTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeSubTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskComment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeSubTask", "EmployeeSubTask")
                        .WithMany()
                        .HasForeignKey("EmployeeSubTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeSubTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskTimeRecord", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeSubTaskUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeSubTask", "EmployeeSubTask")
                        .WithMany()
                        .HasForeignKey("EmployeeSubTaskId");

                    b.Navigation("EmployeeSubTask");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTask", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeProject", "EmployeeProject")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("matcrm.data.Models.Tables.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");

                    b.HasOne("matcrm.data.Models.Tables.EmployeeTaskStatus", "EmployeeTaskStatus")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("EmployeeProject");

                    b.Navigation("EmployeeTaskStatus");

                    b.Navigation("Section");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskActivity", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeTask", "EmployeeTask")
                        .WithMany()
                        .HasForeignKey("EmployeeTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskAttachment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeTask", "EmployeeTask")
                        .WithMany()
                        .HasForeignKey("EmployeeTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskComment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeTask", "EmployeeTask")
                        .WithMany()
                        .HasForeignKey("EmployeeTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskStatus", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskTimeRecord", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeTask", "EmployeeTask")
                        .WithMany()
                        .HasForeignKey("EmployeeTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.EmployeeTaskUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeTask", "EmployeeTask")
                        .WithMany()
                        .HasForeignKey("EmployeeTaskId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("EmployeeTask");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ERPSystemColumnMap", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomField", "CustomField")
                        .WithMany()
                        .HasForeignKey("CustomFieldId");

                    b.HasOne("matcrm.data.Models.Tables.CustomModule", "CustomModule")
                        .WithMany()
                        .HasForeignKey("CustomModuleId");

                    b.HasOne("matcrm.data.Models.Tables.ERPSystem", "ERPSystem")
                        .WithMany()
                        .HasForeignKey("ERPSystemId");

                    b.HasOne("matcrm.data.Models.Tables.WeClappUser", "WeClappUser")
                        .WithMany()
                        .HasForeignKey("WeClappUserId");

                    b.Navigation("CustomField");

                    b.Navigation("CustomModule");

                    b.Navigation("ERPSystem");

                    b.Navigation("WeClappUser");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ExternalUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.IntProvider", "IntProvider")
                        .WithMany()
                        .HasForeignKey("IntProviderId");

                    b.Navigation("IntProvider");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ImportContactAttachment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomModule", "CustomModule")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("CustomModule");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.IntProviderApp", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.IntProvider", "IntProvider")
                        .WithMany()
                        .HasForeignKey("IntProviderId");

                    b.Navigation("IntProvider");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.IntProviderAppSecret", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.IntProviderApp", "IntProviderApp")
                        .WithMany()
                        .HasForeignKey("IntProviderAppId");

                    b.Navigation("IntProviderApp");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Label", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.LabelCategory", "LabelCategory")
                        .WithMany()
                        .HasForeignKey("LabelCategoryId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("LabelCategory");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Lead", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Customer");

                    b.Navigation("Organization");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LeadActivity", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.ActivityAvailability", "ActivityAvailability")
                        .WithMany()
                        .HasForeignKey("LeadActivityAvailabilityId");

                    b.HasOne("matcrm.data.Models.Tables.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("LeadActivityTypeId");

                    b.HasOne("matcrm.data.Models.Tables.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("ActivityAvailability");

                    b.Navigation("ActivityType");

                    b.Navigation("Lead");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LeadActivityMember", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.LeadActivity", "LeadActivity")
                        .WithMany()
                        .HasForeignKey("LeadActivityId");

                    b.Navigation("LeadActivity");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LeadLabel", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Label", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.HasOne("matcrm.data.Models.Tables.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Label");

                    b.Navigation("Lead");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.LeadNote", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Lead");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailAssignCustomer", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.IntProviderAppSecret", "IntProviderAppSecret")
                        .WithMany()
                        .HasForeignKey("IntProviderAppSecretId");

                    b.Navigation("Customer");

                    b.Navigation("IntProviderAppSecret");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailAssignUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.IntProviderAppSecret", "IntProviderAppSecret")
                        .WithMany()
                        .HasForeignKey("IntProviderAppSecretId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("TeamMemberId");

                    b.Navigation("IntProviderAppSecret");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailBoxTeam", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailComment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.MailComment", "ReplyMailComment")
                        .WithMany()
                        .HasForeignKey("MailReplyCommentId");

                    b.HasOne("matcrm.data.Models.Tables.User", "PinnedUser")
                        .WithMany()
                        .HasForeignKey("PinnedBy");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("TeamMemberId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("PinnedUser");

                    b.Navigation("ReplyMailComment");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailCommentAttachment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.MailComment", "MailComment")
                        .WithMany()
                        .HasForeignKey("MailCommentId");

                    b.Navigation("MailComment");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailParticipant", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.IntProviderAppSecret", "IntProviderAppSecret")
                        .WithMany()
                        .HasForeignKey("IntProviderAppSecretId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("TeamMemberId");

                    b.Navigation("IntProviderAppSecret");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MailRead", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("ReadBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ModuleField", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomField", "CustomField")
                        .WithMany()
                        .HasForeignKey("FieldId");

                    b.Navigation("CustomField");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.ModuleRecordCustomField", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.ModuleField", "ModuleField")
                        .WithMany()
                        .HasForeignKey("ModuleFieldId");

                    b.Navigation("ModuleField");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MollieCustomer", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.MollieSubscription", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappForm", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.OneClappFormAction", "OneClappFormAction")
                        .WithMany()
                        .HasForeignKey("FormActionId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappFormHeader", "OneClappFormHeader")
                        .WithMany()
                        .HasForeignKey("FormHeaderId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappFormLayout", "OneClappFormLayout")
                        .WithMany()
                        .HasForeignKey("FormLayoutId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappFormType", "OneClappFormType")
                        .WithMany()
                        .HasForeignKey("FormTypeId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("OneClappFormAction");

                    b.Navigation("OneClappFormHeader");

                    b.Navigation("OneClappFormLayout");

                    b.Navigation("OneClappFormType");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormField", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomField", "CustomField")
                        .WithMany()
                        .HasForeignKey("CustomFieldId");

                    b.HasOne("matcrm.data.Models.Tables.CustomModule", "CustomModule")
                        .WithMany()
                        .HasForeignKey("CustomModuleId");

                    b.HasOne("matcrm.data.Models.Tables.CustomTableColumn", "CustomTableColumn")
                        .WithMany()
                        .HasForeignKey("CustomTableColumnId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappForm", "OneClappForm")
                        .WithMany()
                        .HasForeignKey("OneClappFormId");

                    b.Navigation("CustomField");

                    b.Navigation("CustomModule");

                    b.Navigation("CustomTableColumn");

                    b.Navigation("OneClappForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormFieldValue", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomField", "CustomField")
                        .WithMany()
                        .HasForeignKey("CustomFieldId");

                    b.HasOne("matcrm.data.Models.Tables.CustomTableColumn", "CustomTableColumn")
                        .WithMany()
                        .HasForeignKey("CustomTableColumnId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappFormField", "OneClappFormField")
                        .WithMany()
                        .HasForeignKey("OneClappFormFieldId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappForm", "OneClappForm")
                        .WithMany()
                        .HasForeignKey("OneClappFormId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappRequestForm", "OneClappRequestForm")
                        .WithMany()
                        .HasForeignKey("OneClappRequestFormId");

                    b.HasOne("matcrm.data.Models.Tables.CustomControlOption", "CustomControlOption")
                        .WithMany()
                        .HasForeignKey("OptionId");

                    b.Navigation("CustomControlOption");

                    b.Navigation("CustomField");

                    b.Navigation("CustomTableColumn");

                    b.Navigation("OneClappForm");

                    b.Navigation("OneClappFormField");

                    b.Navigation("OneClappRequestForm");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappFormLayout", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.OneClappFormLayoutBackground", "OneClappFormLayoutBackground")
                        .WithMany()
                        .HasForeignKey("LayoutBackgroundId");

                    b.Navigation("OneClappFormLayoutBackground");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappLatestThemeConfig", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.OneClappLatestTheme", "OneClappLatestTheme")
                        .WithMany()
                        .HasForeignKey("OneClappLatestThemeId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappLatestThemeLayout", "OneClappLatestThemeLayout")
                        .WithMany()
                        .HasForeignKey("OneClappLatestThemeLayoutId");

                    b.HasOne("matcrm.data.Models.Tables.OneClappLatestThemeScheme", "OneClappLatestThemeScheme")
                        .WithMany()
                        .HasForeignKey("OneClappLatestThemeSchemeId");

                    b.Navigation("OneClappLatestTheme");

                    b.Navigation("OneClappLatestThemeLayout");

                    b.Navigation("OneClappLatestThemeScheme");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OneClappRequestForm", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.OneClappFormStatus", "OneClappFormStatus")
                        .WithMany()
                        .HasForeignKey("OneClappFormStatusId");

                    b.Navigation("OneClappFormStatus");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Organization", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationActivity", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.ActivityAvailability", "ActivityAvailability")
                        .WithMany()
                        .HasForeignKey("OrganizationActivityAvailabilityId");

                    b.HasOne("matcrm.data.Models.Tables.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("OrganizationActivityTypeId");

                    b.HasOne("matcrm.data.Models.Tables.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("ActivityAvailability");

                    b.Navigation("ActivityType");

                    b.Navigation("Organization");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationActivityMember", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.OrganizationActivity", "OrganizationActivity")
                        .WithMany()
                        .HasForeignKey("OrganizationActivityId");

                    b.Navigation("OrganizationActivity");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationAttachment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Organization");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationLabel", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Label", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.HasOne("matcrm.data.Models.Tables.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Label");

                    b.Navigation("Organization");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationNote", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Organization");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.OrganizationNotesComment", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("matcrm.data.Models.Tables.OrganizationNote", "OrganizationNote")
                        .WithMany()
                        .HasForeignKey("OrganizationNoteId");

                    b.Navigation("OrganizationNote");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Section", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.EmployeeProject", "EmployeeProject")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("EmployeeProject");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.SubscriptionPlanDetail", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany()
                        .HasForeignKey("SubScriptionPlanId");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TableColumnUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.CustomTable", "CustomTable")
                        .WithMany()
                        .HasForeignKey("MasterTableId");

                    b.HasOne("matcrm.data.Models.Tables.CustomTableColumn", "CustomTableColumn")
                        .WithMany()
                        .HasForeignKey("TableColumnId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CustomTable");

                    b.Navigation("CustomTableColumn");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Tag", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TaskWeclappUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TeamInbox", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.IntProviderAppSecret", "IntProviderAppSecret")
                        .WithMany()
                        .HasForeignKey("IntProviderAppSecretId");

                    b.HasOne("matcrm.data.Models.Tables.MailBoxTeam", "MailBoxTeam")
                        .WithMany()
                        .HasForeignKey("MailBoxTeamId");

                    b.Navigation("IntProviderAppSecret");

                    b.Navigation("MailBoxTeam");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TeamInboxAccess", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.TeamInbox", "TeamInbox")
                        .WithMany()
                        .HasForeignKey("TeamInboxId");

                    b.HasOne("matcrm.data.Models.Tables.User", "TeamMate")
                        .WithMany()
                        .HasForeignKey("TeamMateId");

                    b.Navigation("TeamInbox");

                    b.Navigation("TeamMate");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.Ticket", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.HasOne("matcrm.data.Models.Tables.TicketCategory", "TicketCategory")
                        .WithMany()
                        .HasForeignKey("TicketCategoryId");

                    b.HasOne("matcrm.data.Models.Tables.TicketChannel", "TicketChannel")
                        .WithMany()
                        .HasForeignKey("TicketChannelId");

                    b.HasOne("matcrm.data.Models.Tables.TicketPriority", "TicketPriority")
                        .WithMany()
                        .HasForeignKey("TicketPriorityId");

                    b.HasOne("matcrm.data.Models.Tables.TicketStatus", "TicketStatus")
                        .WithMany()
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("matcrm.data.Models.Tables.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId");

                    b.Navigation("Customer");

                    b.Navigation("Tenant");

                    b.Navigation("TicketCategory");

                    b.Navigation("TicketChannel");

                    b.Navigation("TicketPriority");

                    b.Navigation("TicketStatus");

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketCategory", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketChannel", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketPriority", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketStatus", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketTag", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("matcrm.data.Models.Tables.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId");

                    b.Navigation("Tag");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.TicketType", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.User", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.OneClappLatestThemeConfig", "OneClappLatestThemeConfig")
                        .WithMany()
                        .HasForeignKey("OneClappLatestThemeConfigId");

                    b.Navigation("OneClappLatestThemeConfig");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.UserSubscription", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany()
                        .HasForeignKey("SubScriptionPlanId");

                    b.HasOne("matcrm.data.Models.Tables.SubscriptionType", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("SubscriptionPlan");

                    b.Navigation("SubscriptionType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("matcrm.data.Models.Tables.WeClappUser", b =>
                {
                    b.HasOne("matcrm.data.Models.Tables.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
